

Given two tables as below, write a query to display the comparison result (higher/lower/same) of the average salary of employees in a department to the company's average salary.
 

Table: salary
| id | employee_id | amount | pay_date   |
|----|-------------|--------|------------|
| 1  | 1           | 9000   | 2017-03-31 |
| 2  | 2           | 6000   | 2017-03-31 |
| 3  | 3           | 10000  | 2017-03-31 |
| 4  | 1           | 7000   | 2017-02-28 |
| 5  | 2           | 6000   | 2017-02-28 |
| 6  | 3           | 8000   | 2017-02-28 |
 

The employee_id column refers to the employee_id in the following table employee.
 

| employee_id | department_id |
|-------------|---------------|
| 1           | 1             |
| 2           | 2             |
| 3           | 2             |
 

So for the sample data above, the result is:
 

| pay_month | department_id | comparison  |
|-----------|---------------|-------------|
| 2017-03   | 1             | higher      |
| 2017-03   | 2             | lower       |
| 2017-02   | 1             | same        |
| 2017-02   | 2             | same        |


Solution:

SELECT pay_date pd, AVG(amount)A_A
FROM salary s
JOIN employee e ON e.employee_id = s.employee_id
GROUP BY pay_date--, department_id
)

SELECT DISTINCT SUBSTRING(CAST(pay_date as varchar),1,7) as pay_month,department_id, 
CASE WHEN AVG(amount) = A_A THEN 'same'
     WHEN AVG(amount) > A_A THEN 'higher'
     WHEN AVG(amount) < A_A THEN 'lower'
     END AS comparison
FROM salary s
JOIN employee e ON e.employee_id = s.employee_id
JOIN CTE c ON c.pd = s.pay_date
GROUP BY SUBSTRING(CAST(pay_date as varchar),1,7), department_id,A_A
order by 1 
